desc: (none)
cmd: ./example3
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=455873525
mem_heap_B=669304
mem_heap_extra_B=243368
mem_stacks_B=0
heap_tree=detailed
n11: 669304 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 223496 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 223496 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 222656 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 117208 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 117208 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 98000 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 50624 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 50624 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 50624 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 50624 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 50624 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 50624 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 50624 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 50624 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 50624 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 50624 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 50624 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 18984 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 18984 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 18984 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 18984 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 18984 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 18984 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 18984 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 18984 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 18984 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 18984 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 18984 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 13888 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 13888 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 13888 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 13888 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 13888 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 13888 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 13888 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 13888 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 13888 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 13888 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 13888 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 12880 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 12880 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 12880 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 12880 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 12880 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 12880 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 12880 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 12880 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 12880 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 12880 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 12880 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 1624 in 1 place, below massif's threshold (1.00%)
      n0: 19208 in 6 places, all below massif's threshold (1.00%)
    n1: 105056 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 105056 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 84784 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 24920 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 24920 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 24920 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 24920 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 24920 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 24920 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 24920 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 24920 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 24920 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 24920 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 24920 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 21616 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 21616 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 21616 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 21616 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 21616 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 21616 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 21616 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 21616 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 21616 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 21616 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 21616 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 19208 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 19208 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 19208 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 19208 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 19208 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 19208 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 19208 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 19208 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 19208 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 19208 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 19208 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 17976 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 17976 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 17976 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 17976 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 17976 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 17976 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 17976 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 17976 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 17976 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 17976 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 17976 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 1064 in 1 place, below massif's threshold (1.00%)
      n0: 20272 in 7 places, all below massif's threshold (1.00%)
    n0: 392 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 102080 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 102080 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 102080 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 102080 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 102080 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 102080 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 102080 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 27480 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 27480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 27480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 27480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 27480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 27480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 27480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 27480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 27480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 27480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 27480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 27480 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 27480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 27480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 27480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 27480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 27480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 27480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 27480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 27480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 27480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 27480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 23560 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 23560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 23560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 23560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 23560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 23560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 23560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 23560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 23560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 23560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 23560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 23560 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 23560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 23560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 23560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 23560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 23560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 23560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 23560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 23560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 23560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 23560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 61248 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 61248 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 61248 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 61248 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 61248 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 61248 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 61248 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 61248 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 61248 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 16488 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 16488 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 16488 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 16488 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 16488 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 16488 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 16488 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 16488 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 16488 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 16488 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 16488 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 16488 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 16488 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 16488 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 16488 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 16488 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 16488 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 16488 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 16488 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 16488 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 16488 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 16488 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 14136 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 14136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 14136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 14136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 14136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 14136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 14136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 14136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 14136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 14136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 14136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 14136 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 14136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 14136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 14136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 14136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 14136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 14136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 14136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 14136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 14136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 14136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 55712 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 55712 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 41784 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 41784 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 41784 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 41784 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 41784 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 41784 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 41784 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 41784 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 41784 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n3: 41784 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 27856 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
              n1: 27856 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 27856 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 27856 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 27856 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 27856 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 27856 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 27856 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 27856 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 27856 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 27856 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n1: 13928 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 13928 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 13928 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 13928 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 13928 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 13928 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 13928 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 13928 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 13928 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 13928 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 13928 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 1 place, below massif's threshold (1.00%)
   n1: 13928 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 13928 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 13928 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 13928 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 13928 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 13928 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 13928 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 13928 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 13928 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 13928 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
             n1: 13928 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 13928 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 13928 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 13928 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 13928 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 13928 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 13928 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 13928 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 13928 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 13928 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n0: 55584 0x401440: main (example3.cpp:17)
 n2: 43520 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n0: 26320 in 4 places, all below massif's threshold (1.00%)
  n1: 17200 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 17200 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 17200 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 17200 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 17200 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 17200 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 17200 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 17200 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 17200 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 17200 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 17200 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 26112 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 26112 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 26112 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 26112 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 26112 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 26112 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 26112 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 25296 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 15360 in 4 places, all below massif's threshold (1.00%)
         n1: 9936 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 9936 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 9936 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 9936 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 9936 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 9936 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 9936 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 9936 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 9936 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 9936 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 9936 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 816 in 2 places, all below massif's threshold (1.00%)
 n0: 18528 0x40140A: main (example3.cpp:14)
 n1: 9200 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 9200 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 9200 0x401519: main (example3.cpp:26)
 n0: 1120 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=2
#-----------
time=1243704358
mem_heap_B=1070688
mem_heap_extra_B=420888
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=1718827718
mem_heap_B=1291416
mem_heap_extra_B=500168
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=2391842332
mem_heap_B=1490656
mem_heap_extra_B=591832
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=2922424661
mem_heap_B=1628272
mem_heap_extra_B=655752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=3641925405
mem_heap_B=1785216
mem_heap_extra_B=727624
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=4219396659
mem_heap_B=1905520
mem_heap_extra_B=782952
mem_stacks_B=0
heap_tree=detailed
n10: 1905520 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 779128 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 779128 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 778288 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 414624 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 414624 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 337904 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 164416 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 164416 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 164416 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 164416 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 164416 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 164416 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 164416 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 164416 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 164416 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 164416 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 164416 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 71064 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 71064 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 71064 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 71064 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 71064 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 71064 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 71064 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 71064 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 71064 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 71064 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 71064 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 47768 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 47768 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 47768 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 47768 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 47768 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 47768 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 47768 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 47768 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 47768 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 47768 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 47768 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 39928 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 39928 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 39928 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 39928 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 39928 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 39928 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 39928 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 39928 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 39928 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 39928 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 39928 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 14728 in 1 place, below massif's threshold (1.00%)
      n0: 76720 in 6 places, all below massif's threshold (1.00%)
    n1: 363216 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 363216 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 283696 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 82264 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 82264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 82264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 82264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 82264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 82264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 82264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 82264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 82264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 82264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 82264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 70952 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 70952 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 70952 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 70952 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 70952 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 70952 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 70952 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 70952 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 70952 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 70952 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 70952 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 66024 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 66024 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 66024 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 66024 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 66024 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 66024 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 66024 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 66024 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 66024 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 66024 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 66024 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 52808 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 52808 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 52808 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 52808 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 52808 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 52808 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 52808 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 52808 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 52808 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 52808 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 52808 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 11648 in 1 place, below massif's threshold (1.00%)
      n0: 79520 in 7 places, all below massif's threshold (1.00%)
    n0: 448 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 366080 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 366080 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 366080 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 366080 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 366080 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 366080 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 366080 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 108520 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 108520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 108520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 108520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 108520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 108520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 108520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 108520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 108520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 108520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 108520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 108520 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 108520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 108520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 108520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 108520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 108520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 108520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 108520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 108520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 108520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 108520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 74520 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 74520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 74520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 74520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 74520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 74520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 74520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 74520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 74520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 74520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 74520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 74520 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 74520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 74520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 74520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 74520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 74520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 74520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 74520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 74520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 74520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 74520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 219648 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 219648 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 219648 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 219648 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 219648 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 219648 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 219648 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 219648 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 219648 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 65112 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 65112 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 65112 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 65112 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 65112 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 65112 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 65112 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 65112 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 65112 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 65112 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 65112 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 65112 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 65112 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 65112 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 65112 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 65112 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 65112 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 65112 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 65112 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 65112 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 65112 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 65112 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 44712 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 44712 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 44712 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 44712 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 44712 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 44712 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 44712 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 44712 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 44712 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 44712 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 44712 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 44712 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 44712 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 44712 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 44712 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 44712 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 44712 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 44712 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 44712 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 44712 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 44712 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 44712 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 148000 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 56040 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 56040 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 56040 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 56040 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 56040 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 56040 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 56040 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 56040 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 56040 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 56040 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 56040 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 32640 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 32640 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 32640 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 32640 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 32640 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 32640 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 32640 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 32640 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 32640 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 32640 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 32640 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 30960 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 30960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 30960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 30960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 30960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 30960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 30960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 30960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 30960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 30960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 30960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 28360 in 2 places, all below massif's threshold (1.00%)
 n1: 119648 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 119648 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 89736 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 89736 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 89736 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 89736 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 89736 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 89736 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 89736 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 89736 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 89736 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 89736 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 89736 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 89736 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 89736 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 89736 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 89736 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 89736 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 89736 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 89736 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 89736 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 89736 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 89736 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 29912 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 29912 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 29912 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 29912 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 29912 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 29912 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 29912 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 29912 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 29912 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 29912 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
             n1: 29912 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 29912 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 29912 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 29912 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 29912 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 29912 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 29912 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 29912 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 29912 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 29912 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 88800 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 88800 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 88800 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 88800 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 88800 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 88800 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 88800 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 88440 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 54984 in 4 places, all below massif's threshold (1.00%)
         n1: 33456 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 33456 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 33456 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 33456 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 33456 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 33456 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 33456 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 33456 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 33456 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 33456 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 33456 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 360 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 36200 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 36200 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 36200 0x401519: main (example3.cpp:26)
 n0: 19728 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=8
#-----------
time=4927573781
mem_heap_B=2071200
mem_heap_extra_B=844216
mem_stacks_B=0
heap_tree=detailed
n10: 2071200 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 844648 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 844648 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 843808 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 446432 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 446432 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 362040 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 175336 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 175336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 175336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 175336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 175336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 175336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 175336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 175336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 175336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 175336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 175336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 74984 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 74984 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 74984 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 74984 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 74984 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 74984 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 74984 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 74984 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 74984 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 74984 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 74984 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 52528 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 52528 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 52528 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 52528 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 52528 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 52528 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 52528 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 52528 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 52528 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 52528 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 52528 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 41720 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 41720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 41720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 41720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 41720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 41720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 41720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 41720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 41720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 41720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 41720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 17472 in 1 place, below massif's threshold (1.00%)
      n0: 84392 in 6 places, all below massif's threshold (1.00%)
    n1: 396872 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n3: 396872 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 307944 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 89432 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 89432 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 89432 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 89432 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 89432 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 89432 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 89432 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 89432 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 89432 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 89432 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 89432 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 77168 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 77168 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 77168 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 77168 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 77168 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 77168 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 77168 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 77168 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 77168 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 77168 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 77168 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 71008 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 71008 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 71008 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 71008 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 71008 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 71008 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 71008 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 71008 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 71008 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 71008 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 71008 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 55720 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 55720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 55720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 55720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 55720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 55720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 55720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 55720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 55720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 55720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 55720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 14616 in 1 place, below massif's threshold (1.00%)
      n0: 59640 in 6 places, all below massif's threshold (1.00%)
      n1: 29288 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 29288 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 29288 0x401519: main (example3.cpp:26)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 396120 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 396120 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 396120 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 396120 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 396120 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 396120 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 396120 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 118480 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 118480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 118480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 118480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 118480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 118480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 118480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 118480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 118480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 118480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 118480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 118440 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 118440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 118440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 118440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 118440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 118440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 118440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 118440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 118440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 118440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 118440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 79600 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 79600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 79600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 79600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 79600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 79600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 79600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 79600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 79600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 79600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 79600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 79600 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 79600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 79600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 79600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 79600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 79600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 79600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 79600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 79600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 79600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 79600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 237672 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 237672 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 237672 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 237672 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 237672 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 237672 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 237672 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 237672 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 237672 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 71088 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 71088 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 71088 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 71088 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 71088 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 71088 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 71088 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 71088 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 71088 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 71088 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 71088 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 71064 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 71064 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 71064 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 71064 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 71064 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 71064 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 71064 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 71064 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 71064 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 71064 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 71064 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 47760 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 47760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 47760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 47760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 47760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 47760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 47760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 47760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 47760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 47760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 47760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 47760 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 47760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 47760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 47760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 47760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 47760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 47760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 47760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 47760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 47760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 47760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 159520 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 60120 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 60120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 60120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 60120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 60120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 60120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 60120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 60120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 60120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 60120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 60120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 34760 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 34760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 34760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 34760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 34760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 34760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 34760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 34760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 34760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 34760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 34760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 33800 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 33800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 33800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 33800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 33800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 33800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 33800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 33800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 33800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 33800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 33800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 30840 in 2 places, all below massif's threshold (1.00%)
 n1: 149872 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 149872 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 89736 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 89736 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 89736 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 89736 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 89736 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 89736 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 89736 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 89736 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 89736 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 89736 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 89736 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 89736 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 89736 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 89736 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 89736 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 89736 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 89736 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 89736 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 89736 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 89736 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 89736 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 95712 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 95712 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 95712 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 95712 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 95712 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 95712 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 95712 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 95352 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 59448 in 4 places, all below massif's threshold (1.00%)
         n1: 35904 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 35904 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 35904 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 35904 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 35904 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 35904 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 35904 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 35904 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 35904 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 35904 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 35904 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 360 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 39520 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 39520 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 39520 0x401519: main (example3.cpp:26)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=9
#-----------
time=5510558615
mem_heap_B=2173240
mem_heap_extra_B=891864
mem_stacks_B=0
heap_tree=detailed
n10: 2173240 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 892976 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 892976 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 892136 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 471184 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 471184 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 381192 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 184128 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 184128 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 184128 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 184128 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 184128 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 184128 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 184128 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 184128 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 184128 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 184128 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 184128 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 78680 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 78680 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 78680 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 78680 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 78680 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 78680 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 78680 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 78680 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 78680 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 78680 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 78680 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 56336 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 56336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 56336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 56336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 56336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 56336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 56336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 56336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 56336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 56336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 56336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 43176 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 43176 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 43176 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 43176 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 43176 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 43176 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 43176 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 43176 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 43176 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 43176 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 43176 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 18872 in 1 place, below massif's threshold (1.00%)
      n0: 89992 in 6 places, all below massif's threshold (1.00%)
    n1: 420448 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n3: 420448 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 327432 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 94528 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 94528 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 94528 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 94528 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 94528 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 94528 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 94528 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 94528 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 94528 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 94528 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 94528 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 82320 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 82320 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 82320 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 82320 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 82320 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 82320 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 82320 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 82320 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 82320 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 82320 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 82320 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 76552 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 76552 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 76552 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 76552 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 76552 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 76552 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 76552 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 76552 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 76552 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 76552 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 76552 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 58464 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 58464 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 58464 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 58464 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 58464 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 58464 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 58464 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 58464 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 58464 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 58464 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 58464 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 15568 in 1 place, below massif's threshold (1.00%)
      n0: 62216 in 6 places, all below massif's threshold (1.00%)
      n1: 30800 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 30800 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 30800 0x401519: main (example3.cpp:26)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 418800 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 418800 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 418800 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 418800 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 418800 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 418800 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 418800 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 126240 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 126240 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 126240 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 126240 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 126240 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 126240 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 126240 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 126240 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 126240 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 126240 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 126240 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 126240 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 126240 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 126240 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 126240 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 126240 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 126240 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 126240 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 126240 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 126240 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 126240 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 126240 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 83160 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 83160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 83160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 83160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 83160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 83160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 83160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 83160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 83160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 83160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 83160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 83160 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 83160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 83160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 83160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 83160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 83160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 83160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 83160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 83160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 83160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 83160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 251280 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 251280 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 251280 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 251280 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 251280 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 251280 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 251280 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 251280 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 251280 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 75744 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 75744 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 75744 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 75744 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 75744 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 75744 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 75744 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 75744 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 75744 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 75744 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 75744 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 75744 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 75744 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 75744 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 75744 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 75744 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 75744 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 75744 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 75744 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 75744 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 75744 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 75744 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 49896 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 49896 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 49896 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 49896 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 49896 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 49896 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 49896 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 49896 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 49896 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 49896 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 49896 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 49896 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 49896 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 49896 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 49896 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 49896 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 49896 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 49896 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 49896 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 49896 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 49896 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 49896 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 168800 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 63440 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 63440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 63440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 63440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 63440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 63440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 63440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 63440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 63440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 63440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 63440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 37000 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 37000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 37000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 37000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 37000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 37000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 37000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 37000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 37000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 37000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 37000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 35960 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 35960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 35960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 35960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 35960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 35960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 35960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 35960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 35960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 35960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 35960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 32400 in 2 places, all below massif's threshold (1.00%)
 n1: 149872 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 149872 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 89736 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 89736 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 89736 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 89736 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 89736 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 89736 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 89736 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 89736 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 89736 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 89736 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 89736 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 89736 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 89736 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 89736 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 89736 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 89736 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 89736 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 89736 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 89736 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 89736 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 89736 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 101256 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 101256 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 101256 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 101256 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 101256 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 101256 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 101256 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 100944 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 63024 in 4 places, all below massif's threshold (1.00%)
         n1: 37920 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 37920 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 37920 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 37920 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 37920 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 37920 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 37920 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 37920 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 37920 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 37920 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 37920 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 312 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 42120 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 42120 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 42120 0x401519: main (example3.cpp:26)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=10
#-----------
time=6272542918
mem_heap_B=2358608
mem_heap_extra_B=949720
mem_stacks_B=0
heap_tree=detailed
n10: 2358608 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 952728 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 952728 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 951888 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 503048 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 503048 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 405384 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 195552 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 195552 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 195552 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 195552 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 195552 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 195552 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 195552 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 195552 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 195552 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 195552 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 195552 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 84168 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 84168 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 84168 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 84168 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 84168 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 84168 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 84168 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 84168 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 84168 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 84168 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 84168 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 60200 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 60200 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 60200 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 60200 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 60200 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 60200 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 60200 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 60200 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 60200 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 60200 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 60200 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 44856 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 44856 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 44856 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 44856 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 44856 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 44856 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 44856 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 44856 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 44856 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 44856 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 44856 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 20608 in 1 place, below massif's threshold (1.00%)
      n0: 97664 in 6 places, all below massif's threshold (1.00%)
    n1: 448336 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 448336 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 348096 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 98392 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 98392 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 98392 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 98392 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 98392 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 98392 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 98392 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 98392 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 98392 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 98392 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 98392 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 87360 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 87360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 87360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 87360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 87360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 87360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 87360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 87360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 87360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 87360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 87360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 81648 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 81648 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 81648 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 81648 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 81648 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 81648 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 81648 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 81648 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 81648 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 81648 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 81648 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 63168 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 63168 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 63168 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 63168 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 63168 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 63168 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 63168 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 63168 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 63168 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 63168 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 63168 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 17528 in 1 place, below massif's threshold (1.00%)
      n0: 100240 in 7 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 447160 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 447160 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 447160 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 447160 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 447160 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 447160 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 447160 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 135640 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 135640 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 135640 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 135640 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 135640 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 135640 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 135640 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 135640 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 135640 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 135640 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 135640 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 135600 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 135600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 135600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 135600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 135600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 135600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 135600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 135600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 135600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 135600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 135600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 87960 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 87960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 87960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 87960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 87960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 87960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 87960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 87960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 87960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 87960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 87960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 87960 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 87960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 87960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 87960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 87960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 87960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 87960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 87960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 87960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 87960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 87960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 268296 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 268296 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 268296 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 268296 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 268296 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 268296 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 268296 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 268296 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 268296 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 81384 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 81384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 81384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 81384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 81384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 81384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 81384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 81384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 81384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 81384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 81384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 81360 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 81360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 81360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 81360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 81360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 81360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 81360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 81360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 81360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 81360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 81360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 52776 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 52776 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 52776 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 52776 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 52776 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 52776 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 52776 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 52776 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 52776 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 52776 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 52776 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 52776 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 52776 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 52776 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 52776 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 52776 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 52776 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 52776 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 52776 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 52776 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 52776 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 52776 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 210008 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 210008 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 149872 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 149872 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 149872 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 149872 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 149872 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 149872 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 149872 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 149872 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 149872 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 149872 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 149872 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 149872 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 149872 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 149872 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 149872 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 149872 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 149872 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 149872 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 149872 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 149872 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 149872 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n4: 179400 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 67360 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 67360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 67360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 67360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 67360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 67360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 67360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 67360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 67360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 67360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 67360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 39480 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 39480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 39480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 39480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 39480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 39480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 39480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 39480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 39480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 39480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 39480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 37760 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 37760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 37760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 37760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 37760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 37760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 37760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 37760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 37760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 37760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 37760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 34800 in 2 places, all below massif's threshold (1.00%)
 n1: 107640 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 107640 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 107640 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 107640 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 107640 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 107640 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 107640 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 107328 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 67056 in 4 places, all below massif's threshold (1.00%)
         n1: 40272 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 40272 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 40272 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 40272 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 40272 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 40272 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 40272 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 40272 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 40272 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 40272 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 40272 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 312 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 45240 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 45240 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 45240 0x401519: main (example3.cpp:26)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=11
#-----------
time=7271589417
mem_heap_B=2536464
mem_heap_extra_B=1018168
mem_stacks_B=0
heap_tree=detailed
n10: 2536464 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1021216 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1021216 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1020376 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 541968 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 541968 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 436856 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 211904 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 211904 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 211904 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 211904 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 211904 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 211904 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 211904 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 211904 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 211904 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 211904 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 211904 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 89208 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 89208 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 89208 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 89208 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 89208 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 89208 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 89208 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 89208 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 89208 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 89208 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 89208 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 64568 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 64568 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 64568 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 64568 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 64568 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 64568 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 64568 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 64568 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 64568 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 64568 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 64568 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 47320 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 47320 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 47320 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 47320 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 47320 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 47320 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 47320 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 47320 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 47320 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 47320 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 47320 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 23856 in 1 place, below massif's threshold (1.00%)
      n0: 105112 in 6 places, all below massif's threshold (1.00%)
    n1: 477904 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 477904 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 371392 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 104944 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 104944 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 104944 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 104944 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 104944 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 104944 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 104944 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 104944 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 104944 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 104944 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 104944 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 90832 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 90832 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 90832 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 90832 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 90832 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 90832 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 90832 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 90832 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 90832 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 90832 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 90832 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 87696 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 87696 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 87696 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 87696 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 87696 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 87696 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 87696 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 87696 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 87696 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 87696 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 87696 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 67592 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 67592 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 67592 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 67592 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 67592 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 67592 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 67592 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 67592 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 67592 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 67592 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 67592 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 20328 in 1 place, below massif's threshold (1.00%)
      n0: 106512 in 7 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 480880 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 480880 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 480880 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 480880 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 480880 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 480880 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 480880 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 147360 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 147360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 147360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 147360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 147360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 147360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 147360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 147360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 147360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 147360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 147360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 147360 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 147360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 147360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 147360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 147360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 147360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 147360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 147360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 147360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 147360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 147360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 93080 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 93080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 93080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 93080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 93080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 93080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 93080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 93080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 93080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 93080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 93080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 93080 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 93080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 93080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 93080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 93080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 93080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 93080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 93080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 93080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 93080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 93080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 288624 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 288624 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 288624 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 288624 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 288624 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 288624 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 288624 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 288624 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 288624 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 88464 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 88464 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 88464 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 88464 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 88464 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 88464 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 88464 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 88464 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 88464 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 88464 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 88464 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 88464 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 88464 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 88464 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 88464 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 88464 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 88464 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 88464 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 88464 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 88464 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 88464 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 88464 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 55848 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 55848 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 55848 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 55848 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 55848 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 55848 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 55848 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 55848 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 55848 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 55848 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 55848 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 55848 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 55848 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 55848 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 55848 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 55848 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 55848 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 55848 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 55848 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 55848 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 55848 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 55848 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n4: 192440 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 72080 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 72080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 72080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 72080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 72080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 72080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 72080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 72080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 72080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 72080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 72080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 42120 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 42120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 42120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 42120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 42120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 42120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 42120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 42120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 42120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 42120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 42120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 40360 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 40360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 40360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 40360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 40360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 40360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 40360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 40360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 40360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 40360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 40360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 37880 in 2 places, all below massif's threshold (1.00%)
 n1: 115464 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 115464 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 115464 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 115464 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 115464 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 115464 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 115464 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 115176 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 72048 in 4 places, all below massif's threshold (1.00%)
         n1: 43128 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 43128 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 43128 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 43128 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 43128 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 43128 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 43128 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 43128 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 43128 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 43128 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 43128 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 288 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 49160 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 49160 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 49160 0x401519: main (example3.cpp:26)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=12
#-----------
time=8060641523
mem_heap_B=2640096
mem_heap_extra_B=1066696
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=8754901749
mem_heap_B=2747568
mem_heap_extra_B=1115608
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=9519015320
mem_heap_B=2846616
mem_heap_extra_B=1160456
mem_stacks_B=0
heap_tree=detailed
n10: 2846616 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1170456 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1170456 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1169616 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 623784 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n4: 623784 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 500472 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 238728 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 238728 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 238728 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 238728 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 238728 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 238728 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 238728 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 238728 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 238728 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 238728 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 238728 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 100296 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 100296 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 100296 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 100296 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 100296 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 100296 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 100296 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 100296 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 100296 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 100296 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 100296 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 75936 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 75936 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 75936 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 75936 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 75936 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 75936 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 75936 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 75936 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 75936 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 75936 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 75936 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 54208 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 54208 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 54208 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 54208 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 54208 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 54208 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 54208 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 54208 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 54208 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 54208 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 54208 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 31304 in 1 place, below massif's threshold (1.00%)
      n0: 42392 in 4 places, all below massif's threshold (1.00%)
      n1: 40600 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 40600 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 40600 0x401519: main (example3.cpp:26)
      n1: 40320 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 40320 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 40320 0x401519: main (example3.cpp:26)
    n1: 545328 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n3: 545328 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 420168 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 117936 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 117936 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 117936 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 117936 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 117936 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 117936 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 117936 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 117936 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 117936 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 117936 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 117936 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 103824 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 103824 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 103824 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 103824 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 103824 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 103824 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 103824 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 103824 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 103824 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 103824 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 103824 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 99456 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 99456 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 99456 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 99456 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 99456 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 99456 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 99456 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 99456 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 99456 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 99456 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 99456 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 72632 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 72632 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 72632 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 72632 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 72632 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 72632 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 72632 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 72632 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 72632 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 72632 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 72632 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 26320 in 1 place, below massif's threshold (1.00%)
      n0: 83384 in 6 places, all below massif's threshold (1.00%)
      n1: 41776 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 41776 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 41776 0x401519: main (example3.cpp:26)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 549600 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 549600 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 549600 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 549600 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 549600 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 549600 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 549600 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 172080 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 172080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 172080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 172080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 172080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 172080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 172080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 172080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 172080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 172080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 172080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 172080 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 172080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 172080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 172080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 172080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 172080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 172080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 172080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 172080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 172080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 172080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 102720 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 102720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 102720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 102720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 102720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 102720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 102720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 102720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 102720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 102720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 102720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 102720 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 102720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 102720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 102720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 102720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 102720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 102720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 102720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 102720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 102720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 102720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 329760 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 329760 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 329760 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 329760 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 329760 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 329760 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 329760 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 329760 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 329760 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 103248 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 103248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 103248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 103248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 103248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 103248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 103248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 103248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 103248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 103248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 103248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 103248 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 103248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 103248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 103248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 103248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 103248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 103248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 103248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 103248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 103248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 103248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 61632 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 61632 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 61632 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 61632 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 61632 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 61632 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 61632 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 61632 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 61632 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 61632 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 61632 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 61632 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 61632 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 61632 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 61632 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 61632 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 61632 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 61632 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 61632 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 61632 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 61632 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 61632 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n4: 219200 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 81560 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 81560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 81560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 81560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 81560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 81560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 81560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 81560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 81560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 81560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 81560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 47560 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 47560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 47560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 47560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 47560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 47560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 47560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 47560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 47560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 47560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 47560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 46160 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 46160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 46160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 46160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 46160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 46160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 46160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 46160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 46160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 46160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 46160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 43920 in 2 places, all below massif's threshold (1.00%)
 n1: 131520 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 131520 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 131520 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 131520 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 131520 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 131520 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 131520 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 131232 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 82416 in 4 places, all below massif's threshold (1.00%)
         n1: 48816 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 48816 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 48816 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 48816 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 48816 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 48816 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 48816 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 48816 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 48816 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 48816 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 48816 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 288 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 57400 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 57400 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 57400 0x401519: main (example3.cpp:26)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=15
#-----------
time=10238619602
mem_heap_B=2929064
mem_heap_extra_B=1200152
mem_stacks_B=0
heap_tree=detailed
n10: 2929064 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1207752 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1207752 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1206912 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 642936 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n4: 642936 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 516656 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 245336 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 245336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 245336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 245336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 245336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 245336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 245336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 245336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 245336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 245336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 245336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 103656 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 103656 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 103656 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 103656 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 103656 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 103656 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 103656 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 103656 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 103656 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 103656 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 103656 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 77616 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 77616 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 77616 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 77616 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 77616 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 77616 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 77616 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 77616 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 77616 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 77616 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 77616 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 56672 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 56672 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 56672 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 56672 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 56672 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 56672 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 56672 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 56672 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 56672 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 56672 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 56672 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 33376 in 1 place, below massif's threshold (1.00%)
      n0: 42952 in 4 places, all below massif's threshold (1.00%)
      n1: 41776 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 41776 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 41776 0x401519: main (example3.cpp:26)
      n1: 41552 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 41552 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 41552 0x401519: main (example3.cpp:26)
    n1: 563472 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 563472 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 432376 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 120120 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 120120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 120120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 120120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 120120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 120120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 120120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 120120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 120120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 120120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 120120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 106624 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 106624 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 106624 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 106624 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 106624 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 106624 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 106624 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 106624 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 106624 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 106624 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 106624 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 102984 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 102984 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 102984 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 102984 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 102984 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 102984 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 102984 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 102984 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 102984 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 102984 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 102984 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 74872 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 74872 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 74872 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 74872 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 74872 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 74872 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 74872 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 74872 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 74872 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 74872 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 74872 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 27776 in 1 place, below massif's threshold (1.00%)
      n1: 43680 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 43680 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 43680 0x401519: main (example3.cpp:26)
      n1: 42056 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 42056 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 42056 0x401519: main (example3.cpp:26)
      n1: 41832 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 41832 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 41832 0x401519: main (example3.cpp:26)
      n0: 3528 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 569520 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 569520 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 569520 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 569520 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 569520 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 569520 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 569520 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 179160 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 179160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 179160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 179160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 179160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 179160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 179160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 179160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 179160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 179160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 179160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 179160 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 179160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 179160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 179160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 179160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 179160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 179160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 179160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 179160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 179160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 179160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 105600 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 105600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 105600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 105600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 105600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 105600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 105600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 105600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 105600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 105600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 105600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 105600 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 105600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 105600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 105600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 105600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 105600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 105600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 105600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 105600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 105600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 105600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 341712 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 341712 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 341712 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 341712 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 341712 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 341712 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 341712 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 341712 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 341712 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 107496 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 107496 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 107496 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 107496 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 107496 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 107496 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 107496 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 107496 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 107496 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 107496 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 107496 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 107496 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 107496 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 107496 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 107496 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 107496 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 107496 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 107496 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 107496 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 107496 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 107496 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 107496 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 63360 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 63360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 63360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 63360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 63360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 63360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 63360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 63360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 63360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 63360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 63360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 63360 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 63360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 63360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 63360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 63360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 63360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 63360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 63360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 63360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 63360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 63360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n4: 226040 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 83840 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 83840 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 83840 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 83840 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 83840 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 83840 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 83840 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 83840 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 83840 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 83840 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 83840 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 49240 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 49240 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 49240 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 49240 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 49240 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 49240 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 49240 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 49240 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 49240 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 49240 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 49240 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 47080 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 47080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 47080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 47080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 47080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 47080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 47080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 47080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 47080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 47080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 47080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 45880 in 2 places, all below massif's threshold (1.00%)
 n1: 135600 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 135600 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 135600 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 135600 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 135600 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 135600 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 135600 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 135336 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 85128 in 4 places, all below massif's threshold (1.00%)
         n1: 50208 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 50208 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 50208 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 50208 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 50208 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 50208 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 50208 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 50208 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 50208 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 50208 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 50208 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 264 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 59760 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 59760 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 59760 0x401519: main (example3.cpp:26)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=16
#-----------
time=11248038787
mem_heap_B=3039248
mem_heap_extra_B=1250552
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=12047417983
mem_heap_B=3133288
mem_heap_extra_B=1294152
mem_stacks_B=0
heap_tree=detailed
n10: 3133288 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1305248 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1305248 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1304408 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 693448 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n4: 693448 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 554904 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 263032 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 263032 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 263032 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 263032 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 263032 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 263032 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 263032 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 263032 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 263032 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 263032 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 263032 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 111384 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 111384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 111384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 111384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 111384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 111384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 111384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 111384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 111384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 111384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 111384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 83272 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 83272 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 83272 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 83272 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 83272 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 83272 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 83272 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 83272 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 83272 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 83272 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 83272 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 59024 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 59024 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 59024 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 59024 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 59024 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 59024 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 59024 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 59024 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 59024 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 59024 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 59024 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 38192 in 1 place, below massif's threshold (1.00%)
      n0: 47600 in 4 places, all below massif's threshold (1.00%)
      n1: 45976 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 45976 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 45976 0x401519: main (example3.cpp:26)
      n1: 44968 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 44968 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 44968 0x401519: main (example3.cpp:26)
    n1: 610456 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 610456 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 467208 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 128576 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 128576 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 128576 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 128576 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 128576 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 128576 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 128576 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 128576 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 128576 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 128576 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 128576 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 114632 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 114632 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 114632 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 114632 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 114632 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 114632 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 114632 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 114632 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 114632 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 114632 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 114632 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 111888 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 111888 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 111888 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 111888 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 111888 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 111888 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 111888 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 111888 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 111888 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 111888 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 111888 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 80920 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 80920 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 80920 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 80920 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 80920 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 80920 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 80920 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 80920 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 80920 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 80920 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 80920 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 31192 in 1 place, below massif's threshold (1.00%)
      n1: 47712 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 47712 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 47712 0x401519: main (example3.cpp:26)
      n1: 46368 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 46368 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 46368 0x401519: main (example3.cpp:26)
      n1: 45360 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 45360 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 45360 0x401519: main (example3.cpp:26)
      n0: 3808 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 615440 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 615440 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 615440 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 615440 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 615440 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 615440 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 615440 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 195720 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 195720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 195720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 195720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 195720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 195720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 195720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 195720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 195720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 195720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 195720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 195720 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 195720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 195720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 195720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 195720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 195720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 195720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 195720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 195720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 195720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 195720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 112000 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 112000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 112000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 112000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 112000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 112000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 112000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 112000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 112000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 112000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 112000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 112000 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 112000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 112000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 112000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 112000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 112000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 112000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 112000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 112000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 112000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 112000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 369264 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 369264 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 369264 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 369264 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 369264 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 369264 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 369264 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 369264 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 369264 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 117432 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 117432 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 117432 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 117432 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 117432 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 117432 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 117432 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 117432 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 117432 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 117432 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 117432 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 117432 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 117432 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 117432 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 117432 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 117432 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 117432 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 117432 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 117432 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 117432 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 117432 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 117432 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 67200 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 67200 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 67200 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 67200 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 67200 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 67200 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 67200 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 67200 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 67200 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 67200 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 67200 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 67200 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 67200 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 67200 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 67200 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 67200 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 67200 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 67200 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 67200 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 67200 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 67200 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 67200 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 243360 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 89920 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 89920 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 89920 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 89920 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 89920 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 89920 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 89920 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 89920 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 89920 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 89920 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 89920 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 53160 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 53160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 53160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 53160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 53160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 53160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 53160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 53160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 53160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 53160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 53160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 50440 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 50440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 50440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 50440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 50440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 50440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 50440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 50440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 50440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 50440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 50440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 49840 in 2 places, all below massif's threshold (1.00%)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 146016 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 146016 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 146016 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 146016 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 146016 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 146016 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 146016 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 145752 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 91896 in 4 places, all below massif's threshold (1.00%)
         n1: 53856 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 53856 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 53856 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 53856 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 53856 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 53856 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 53856 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 53856 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 53856 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 53856 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 53856 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 264 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 65280 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 65280 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 65280 0x401519: main (example3.cpp:26)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=18
#-----------
time=12649198374
mem_heap_B=3193720
mem_heap_extra_B=1322824
mem_stacks_B=0
heap_tree=detailed
n10: 3193720 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1334312 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1334312 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1333472 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 706608 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n4: 706608 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 563584 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 266280 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 266280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 266280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 266280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 266280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 266280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 266280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 266280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 266280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 266280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 266280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 111832 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 111832 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 111832 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 111832 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 111832 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 111832 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 111832 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 111832 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 111832 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 111832 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 111832 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 85400 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 85400 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 85400 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 85400 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 85400 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 85400 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 85400 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 85400 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 85400 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 85400 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 85400 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 59864 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 59864 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 59864 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 59864 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 59864 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 59864 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 59864 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 59864 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 59864 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 59864 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 59864 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 40208 in 1 place, below massif's threshold (1.00%)
      n0: 49056 in 4 places, all below massif's threshold (1.00%)
      n1: 47432 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 47432 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 47432 0x401519: main (example3.cpp:26)
      n1: 46536 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 46536 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 46536 0x401519: main (example3.cpp:26)
    n1: 626360 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 626360 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 479360 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 131824 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 131824 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 131824 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 131824 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 131824 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 131824 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 131824 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 131824 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 131824 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 131824 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 131824 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 118608 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 118608 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 118608 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 118608 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 118608 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 118608 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 118608 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 118608 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 118608 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 118608 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 118608 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 113960 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 113960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 113960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 113960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 113960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 113960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 113960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 113960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 113960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 113960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 113960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 82264 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 82264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 82264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 82264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 82264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 82264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 82264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 82264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 82264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 82264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 82264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 32704 in 1 place, below massif's threshold (1.00%)
      n1: 49168 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 49168 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 49168 0x401519: main (example3.cpp:26)
      n1: 47320 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 47320 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 47320 0x401519: main (example3.cpp:26)
      n1: 46424 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 46424 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 46424 0x401519: main (example3.cpp:26)
      n0: 4088 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 628960 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 628960 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 628960 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 628960 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 628960 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 628960 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 628960 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 201120 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 201120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 201120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 201120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 201120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 201120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 201120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 201120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 201120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 201120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 201120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 201120 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 201120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 201120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 201120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 201120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 201120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 201120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 201120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 201120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 201120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 201120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 113360 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 113360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 113360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 113360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 113360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 113360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 113360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 113360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 113360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 113360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 113360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 113360 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 113360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 113360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 113360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 113360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 113360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 113360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 113360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 113360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 113360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 113360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 377376 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 377376 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 377376 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 377376 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 377376 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 377376 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 377376 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 377376 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 377376 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 120672 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 120672 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 120672 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 120672 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 120672 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 120672 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 120672 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 120672 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 120672 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 120672 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 120672 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 120672 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 120672 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 120672 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 120672 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 120672 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 120672 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 120672 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 120672 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 120672 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 120672 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 120672 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 68016 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 68016 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 68016 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 68016 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 68016 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 68016 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 68016 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 68016 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 68016 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 68016 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 68016 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 68016 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 68016 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 68016 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 68016 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 68016 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 68016 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 68016 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 68016 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 68016 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 68016 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 68016 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 248320 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 91640 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 91640 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 91640 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 91640 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 91640 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 91640 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 91640 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 91640 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 91640 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 91640 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 91640 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 53760 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 53760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 53760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 53760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 53760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 53760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 53760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 53760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 53760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 53760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 53760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 51720 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 51720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 51720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 51720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 51720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 51720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 51720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 51720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 51720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 51720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 51720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 51200 in 2 places, all below massif's threshold (1.00%)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 148992 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 148992 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 148992 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 148992 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 148992 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 148992 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 148992 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 148728 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 93840 in 4 places, all below massif's threshold (1.00%)
         n1: 54888 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 54888 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 54888 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 54888 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 54888 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 54888 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 54888 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 54888 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 54888 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 54888 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 54888 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 264 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 67080 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 67080 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 67080 0x401519: main (example3.cpp:26)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=19
#-----------
time=13791084245
mem_heap_B=3319672
mem_heap_extra_B=1380520
mem_stacks_B=0
heap_tree=detailed
n10: 3319672 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1393112 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1393112 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1392272 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 738136 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 738136 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 588392 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 277144 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 277144 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 277144 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 277144 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 277144 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 277144 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 277144 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 277144 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 277144 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 277144 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 277144 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 117040 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 117040 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 117040 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 117040 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 117040 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 117040 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 117040 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 117040 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 117040 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 117040 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 117040 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 89376 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 89376 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 89376 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 89376 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 89376 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 89376 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 89376 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 89376 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 89376 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 89376 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 89376 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 62384 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 62384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 62384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 62384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 62384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 62384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 62384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 62384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 62384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 62384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 62384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 42448 in 1 place, below massif's threshold (1.00%)
      n1: 50008 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 50008 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 50008 0x401519: main (example3.cpp:26)
      n1: 48776 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 48776 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 48776 0x401519: main (example3.cpp:26)
      n1: 47544 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 47544 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 47544 0x401519: main (example3.cpp:26)
      n0: 3416 in 3 places, all below massif's threshold (1.00%)
    n1: 653688 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 653688 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 501256 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 136248 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 136248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 136248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 136248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 136248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 136248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 136248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 136248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 136248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 136248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 136248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 124208 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 124208 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 124208 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 124208 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 124208 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 124208 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 124208 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 124208 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 124208 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 124208 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 124208 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 120008 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 120008 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 120008 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 120008 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 120008 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 120008 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 120008 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 120008 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 120008 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 120008 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 120008 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 85120 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 85120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 85120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 85120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 85120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 85120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 85120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 85120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 85120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 85120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 85120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 35672 in 1 place, below massif's threshold (1.00%)
      n1: 51072 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 51072 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51072 0x401519: main (example3.cpp:26)
      n1: 49840 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 49840 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 49840 0x401519: main (example3.cpp:26)
      n1: 48608 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 48608 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 48608 0x401519: main (example3.cpp:26)
      n0: 2912 in 4 places, all below massif's threshold (1.00%)
    n0: 448 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 657760 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 657760 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 657760 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 657760 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 657760 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 657760 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 657760 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 211360 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 211360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 211360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 211360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 211360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 211360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 211360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 211360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 211360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 211360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 211360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 211360 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 211360 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 211360 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 211360 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 211360 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 211360 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 211360 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 211360 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 211360 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 211360 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 211360 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 117520 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 117520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 117520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 117520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 117520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 117520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 117520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 117520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 117520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 117520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 117520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 117520 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 117520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 117520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 117520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 117520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 117520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 117520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 117520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 117520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 117520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 117520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 394656 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 394656 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 394656 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 394656 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 394656 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 394656 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 394656 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 394656 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 394656 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 126816 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 126816 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 126816 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 126816 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 126816 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 126816 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 126816 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 126816 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 126816 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 126816 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 126816 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 126816 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 126816 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 126816 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 126816 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 126816 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 126816 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 126816 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 126816 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 126816 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 126816 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 126816 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 70512 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 70512 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 70512 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 70512 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 70512 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 70512 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 70512 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 70512 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 70512 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 70512 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 70512 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 70512 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 70512 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 70512 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 70512 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 70512 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 70512 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 70512 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 70512 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 70512 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 70512 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 70512 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 259440 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 95560 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 95560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 95560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 95560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 95560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 95560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 95560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 95560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 95560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 95560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 95560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 56440 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 56440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 56440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 56440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 56440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 56440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 56440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 56440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 56440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 56440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 56440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 53720 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 53720 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 53720 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 53720 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 53720 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 53720 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 53720 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 53720 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 53720 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 53720 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 53720 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 53720 in 2 places, all below massif's threshold (1.00%)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 155664 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 155664 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 155664 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 155664 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 155664 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 155664 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 155664 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 155280 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 98136 in 4 places, all below massif's threshold (1.00%)
         n1: 57144 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 57144 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 57144 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 57144 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 57144 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 57144 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 57144 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 57144 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 57144 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 57144 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 57144 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 384 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n1: 70480 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 70480 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 70480 0x401519: main (example3.cpp:26)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19728 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=20
#-----------
time=14736601630
mem_heap_B=3416744
mem_heap_extra_B=1426040
mem_stacks_B=0
heap_tree=detailed
n10: 3416744 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1440040 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1440040 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1439200 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 764680 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 764680 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 607656 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 286496 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 286496 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 286496 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 286496 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 286496 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 286496 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 286496 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 286496 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 286496 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 286496 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 286496 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 120064 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 120064 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 120064 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 120064 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 120064 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 120064 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 120064 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 120064 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 120064 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 120064 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 120064 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 91000 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 91000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 91000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 91000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 91000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 91000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 91000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 91000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 91000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 91000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 91000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 64456 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 64456 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 64456 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 64456 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 64456 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 64456 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 64456 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 64456 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 64456 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 64456 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 64456 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 45640 in 1 place, below massif's threshold (1.00%)
      n1: 52024 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 52024 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 52024 0x401519: main (example3.cpp:26)
      n1: 50736 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 50736 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 50736 0x401519: main (example3.cpp:26)
      n1: 49840 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 49840 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 49840 0x401519: main (example3.cpp:26)
      n0: 4424 in 3 places, all below massif's threshold (1.00%)
    n1: 674016 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 674016 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 515760 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 138656 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 138656 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 138656 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 138656 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 138656 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 138656 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 138656 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 138656 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 138656 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 138656 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 138656 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 126448 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 126448 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 126448 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 126448 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 126448 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 126448 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 126448 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 126448 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 126448 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 126448 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 126448 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 123536 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 123536 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 123536 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 123536 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 123536 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 123536 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 123536 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 123536 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 123536 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 123536 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 123536 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 89264 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 89264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 89264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 89264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 89264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 89264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 89264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 89264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 89264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 89264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 89264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 37856 in 1 place, below massif's threshold (1.00%)
      n1: 52416 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 52416 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 52416 0x401519: main (example3.cpp:26)
      n1: 51520 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 51520 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51520 0x401519: main (example3.cpp:26)
      n1: 50232 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 50232 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 50232 0x401519: main (example3.cpp:26)
      n0: 4088 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 679360 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 679360 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 679360 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 679360 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 679360 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 679360 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 679360 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 219120 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 219120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 219120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 219120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 219120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 219120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 219120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 219120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 219120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 219120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 219120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 219120 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 219120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 219120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 219120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 219120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 219120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 219120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 219120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 219120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 219120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 219120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 120560 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 120560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 120560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 120560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 120560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 120560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 120560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 120560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 120560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 120560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 120560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 120560 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 120560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 120560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 120560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 120560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 120560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 120560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 120560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 120560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 120560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 120560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 407616 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 407616 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 407616 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 407616 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 407616 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 407616 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 407616 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 407616 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 407616 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 131472 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 131472 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 131472 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 131472 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 131472 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 131472 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 131472 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 131472 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 131472 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 131472 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 131472 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 131472 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 131472 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 131472 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 131472 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 131472 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 131472 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 131472 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 131472 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 131472 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 131472 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 131472 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 72336 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 72336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 72336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 72336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 72336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 72336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 72336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 72336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 72336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 72336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 72336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 72336 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 72336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 72336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 72336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 72336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 72336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 72336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 72336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 72336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 72336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 72336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 267480 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 98320 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 98320 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 98320 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 98320 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 98320 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 98320 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 98320 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 98320 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 98320 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 98320 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 98320 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 58000 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 58000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 58000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 58000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 58000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 58000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 58000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 58000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 58000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 58000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 58000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 56480 in 2 places, all below massif's threshold (1.00%)
  n1: 54680 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 54680 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 54680 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 54680 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 54680 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 54680 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 54680 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 54680 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 54680 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 54680 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 54680 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 160488 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 160488 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 160488 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 160488 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 160488 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 160488 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 160488 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 160104 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 101304 in 4 places, all below massif's threshold (1.00%)
         n1: 58800 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 58800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 58800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 58800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 58800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 58800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 58800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 58800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 58800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 58800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 58800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 384 in 2 places, all below massif's threshold (1.00%)
 n1: 73080 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 73080 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 73080 0x401519: main (example3.cpp:26)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=21
#-----------
time=15400111366
mem_heap_B=3483872
mem_heap_extra_B=1456776
mem_stacks_B=0
heap_tree=detailed
n10: 3483872 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1470952 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1470952 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1470112 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 780360 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 780360 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 620592 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 292656 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 292656 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 292656 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 292656 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 292656 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 292656 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 292656 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 292656 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 292656 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 292656 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 292656 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 121968 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 121968 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 121968 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 121968 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 121968 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 121968 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 121968 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 121968 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 121968 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 121968 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 121968 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 93016 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 93016 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 93016 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 93016 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 93016 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 93016 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 93016 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 93016 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 93016 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 93016 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 93016 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 66024 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 66024 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 66024 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 66024 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 66024 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 66024 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 66024 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 66024 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 66024 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 66024 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 66024 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 46928 in 1 place, below massif's threshold (1.00%)
      n1: 53144 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 53144 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 53144 0x401519: main (example3.cpp:26)
      n1: 52136 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 52136 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 52136 0x401519: main (example3.cpp:26)
      n1: 51016 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 51016 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51016 0x401519: main (example3.cpp:26)
      n0: 3472 in 3 places, all below massif's threshold (1.00%)
    n1: 689248 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 689248 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 528192 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 142688 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 142688 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 142688 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 142688 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 142688 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 142688 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 142688 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 142688 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 142688 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 142688 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 142688 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 129696 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 129696 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 129696 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 129696 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 129696 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 129696 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 129696 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 129696 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 129696 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 129696 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 129696 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 126000 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 126000 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 126000 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 126000 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 126000 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 126000 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 126000 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 126000 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 126000 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 126000 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 126000 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 90552 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 90552 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 90552 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 90552 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 90552 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 90552 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 90552 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 90552 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 90552 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 90552 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 90552 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 39256 in 1 place, below massif's threshold (1.00%)
      n1: 53648 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 53648 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 53648 0x401519: main (example3.cpp:26)
      n1: 52528 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 52528 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 52528 0x401519: main (example3.cpp:26)
      n1: 51520 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 51520 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51520 0x401519: main (example3.cpp:26)
      n0: 3360 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 694880 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 694880 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 694880 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 694880 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 694880 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 694880 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 694880 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 224280 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 224280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 224280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 224280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 224280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 224280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 224280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 224280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 224280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 224280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 224280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 224280 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 224280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 224280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 224280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 224280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 224280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 224280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 224280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 224280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 224280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 224280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 123160 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 123160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 123160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 123160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 123160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 123160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 123160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 123160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 123160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 123160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 123160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 123160 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 123160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 123160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 123160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 123160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 123160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 123160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 123160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 123160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 123160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 123160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 416928 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 416928 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 416928 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 416928 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 416928 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 416928 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 416928 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 416928 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 416928 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 134568 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 134568 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 134568 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 134568 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 134568 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 134568 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 134568 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 134568 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 134568 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 134568 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 134568 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 134568 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 134568 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 134568 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 134568 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 134568 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 134568 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 134568 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 134568 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 134568 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 134568 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 134568 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 73896 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 73896 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 73896 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 73896 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 73896 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 73896 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 73896 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 73896 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 73896 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 73896 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 73896 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 73896 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 73896 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 73896 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 73896 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 73896 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 73896 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 73896 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 73896 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 73896 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 73896 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 73896 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 273520 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 100560 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 100560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 100560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 100560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 100560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 100560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 100560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 100560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 100560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 100560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 100560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 59040 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 59040 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 59040 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 59040 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 59040 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 59040 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 59040 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 59040 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 59040 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 59040 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 59040 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 57800 in 2 places, all below massif's threshold (1.00%)
  n1: 56120 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 56120 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 56120 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 56120 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 56120 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 56120 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 56120 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 56120 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 56120 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 56120 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 56120 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 164112 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 164112 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 164112 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 164112 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 164112 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 164112 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 164112 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 163728 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 103584 in 4 places, all below massif's threshold (1.00%)
         n1: 60144 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 60144 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 60144 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 60144 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 60144 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 60144 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 60144 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 60144 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 60144 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 60144 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 60144 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 384 in 2 places, all below massif's threshold (1.00%)
 n1: 74800 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 74800 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 74800 0x401519: main (example3.cpp:26)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=22
#-----------
time=15908470396
mem_heap_B=3531896
mem_heap_extra_B=1479496
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=16570103356
mem_heap_B=3594472
mem_heap_extra_B=1509592
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=17512246950
mem_heap_B=3688176
mem_heap_extra_B=1552744
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=17963854936
mem_heap_B=3728184
mem_heap_extra_B=1570952
mem_stacks_B=0
heap_tree=detailed
n10: 3728184 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1588160 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1588160 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1587320 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 842912 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 842912 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 668024 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 313264 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 313264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 313264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 313264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 313264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 313264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 313264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 313264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 313264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 313264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 313264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 134288 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 134288 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 134288 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 134288 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 134288 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 134288 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 134288 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 134288 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 134288 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 134288 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 134288 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 99960 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 99960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 99960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 99960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 99960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 99960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 99960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 99960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 99960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 99960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 99960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 69384 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 69384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 69384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 69384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 69384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 69384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 69384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 69384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 69384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 69384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 69384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 51128 in 1 place, below massif's threshold (1.00%)
      n1: 57680 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 57680 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 57680 0x401519: main (example3.cpp:26)
      n1: 56840 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 56840 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 56840 0x401519: main (example3.cpp:26)
      n1: 55944 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 55944 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 55944 0x401519: main (example3.cpp:26)
      n0: 4424 in 3 places, all below massif's threshold (1.00%)
    n1: 743904 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 743904 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 567616 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 154056 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 154056 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 154056 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 154056 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 154056 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 154056 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 154056 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 154056 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 154056 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 154056 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 154056 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 139832 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 139832 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 139832 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 139832 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 139832 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 139832 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 139832 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 139832 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 139832 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 139832 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 139832 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 135184 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 135184 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 135184 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 135184 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 135184 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 135184 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 135184 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 135184 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 135184 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 135184 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 135184 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 94080 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 94080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 94080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 94080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 94080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 94080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 94080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 94080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 94080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 94080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 94080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 44464 in 1 place, below massif's threshold (1.00%)
      n1: 58128 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 58128 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 58128 0x401519: main (example3.cpp:26)
      n1: 57232 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 57232 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 57232 0x401519: main (example3.cpp:26)
      n1: 56392 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 56392 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 56392 0x401519: main (example3.cpp:26)
      n0: 4536 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 749440 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 749440 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 749440 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 749440 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 749440 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 749440 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 749440 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 244440 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 244440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 244440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 244440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 244440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 244440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 244440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 244440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 244440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 244440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 244440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 244440 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 244440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 244440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 244440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 244440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 244440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 244440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 244440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 244440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 244440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 244440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 130280 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 130280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 130280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 130280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 130280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 130280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 130280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 130280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 130280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 130280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 130280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 130280 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 130280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 130280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 130280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 130280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 130280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 130280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 130280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 130280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 130280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 130280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 449664 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 449664 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 449664 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 449664 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 449664 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 449664 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 449664 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 449664 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 449664 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 146664 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 146664 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 146664 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 146664 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 146664 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 146664 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 146664 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 146664 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 146664 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 146664 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 146664 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 146664 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 146664 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 146664 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 146664 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 146664 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 146664 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 146664 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 146664 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 146664 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 146664 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 146664 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 78168 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 78168 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 78168 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 78168 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 78168 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 78168 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 78168 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 78168 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 78168 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 78168 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 78168 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 78168 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 78168 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 78168 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 78168 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 78168 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 78168 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 78168 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 78168 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 78168 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 78168 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 78168 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 294200 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 107880 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 107880 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 107880 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 107880 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 107880 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 107880 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 107880 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 107880 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 107880 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 107880 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 107880 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 64160 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 64160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 64160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 64160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 64160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 64160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 64160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 64160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 64160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 64160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 64160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 61680 in 2 places, all below massif's threshold (1.00%)
  n1: 60480 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 60480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 60480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 60480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 60480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 60480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 60480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 60480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 60480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 60480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 60480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 240544 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 240544 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 60136 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 60136 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 60136 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 60136 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 60136 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 60136 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 60136 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 60136 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 60136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 60136 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 60136 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 60136 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 60136 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 60136 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 60136 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 60136 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 60136 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 60136 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 60136 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 60136 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 176520 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 176520 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 176520 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 176520 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 176520 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 176520 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 176520 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 176136 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 111600 in 4 places, all below massif's threshold (1.00%)
         n1: 64536 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 64536 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 64536 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 64536 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 64536 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 64536 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 64536 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 64536 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 64536 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 64536 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 64536 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 384 in 2 places, all below massif's threshold (1.00%)
 n1: 81520 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 81520 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 81520 0x401519: main (example3.cpp:26)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19848 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=26
#-----------
time=18756822001
mem_heap_B=3792656
mem_heap_extra_B=1601624
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=19327392023
mem_heap_B=3913496
mem_heap_extra_B=1629080
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=20225221034
mem_heap_B=3985792
mem_heap_extra_B=1664024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=21282563874
mem_heap_B=4070816
mem_heap_extra_B=1702120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=21993084862
mem_heap_B=4117600
mem_heap_extra_B=1723480
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=22635299013
mem_heap_B=4175840
mem_heap_extra_B=1750088
mem_stacks_B=0
heap_tree=peak
n9: 4175840 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1771560 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1771560 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1770720 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 944944 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 944944 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 746032 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 344960 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 344960 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 344960 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 344960 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 344960 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 344960 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 344960 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 344960 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 344960 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 344960 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 344960 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 150416 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 150416 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 150416 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 150416 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 150416 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 150416 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 150416 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 150416 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 150416 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 150416 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 150416 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 111384 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 111384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 111384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 111384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 111384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 111384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 111384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 111384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 111384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 111384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 111384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 78512 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 78512 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 78512 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 78512 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 78512 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 78512 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 78512 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 78512 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 78512 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 78512 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 78512 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 60760 0x4065F5: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:627)
        n1: 60760 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 60760 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 60760 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 60760 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 60760 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 60760 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 60760 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 60760 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 60760 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 60760 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
      n1: 65408 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 65408 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 65408 0x401519: main (example3.cpp:26)
      n1: 64792 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 64792 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 64792 0x401519: main (example3.cpp:26)
      n1: 64232 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 64232 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 64232 0x401519: main (example3.cpp:26)
      n0: 4480 in 3 places, all below massif's threshold (1.00%)
    n1: 825272 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 825272 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 627312 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 164248 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 164248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 164248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 164248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 164248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 164248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 164248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 164248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 164248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 164248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 164248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 156688 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 156688 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 156688 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 156688 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 156688 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 156688 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 156688 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 156688 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 156688 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 156688 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 156688 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 147112 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 147112 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 147112 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 147112 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 147112 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 147112 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 147112 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 147112 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 147112 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 147112 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 147112 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 105448 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 105448 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 105448 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 105448 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 105448 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 105448 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 105448 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 105448 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 105448 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 105448 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 105448 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 53816 in 1 place, below massif's threshold (1.00%)
      n1: 65072 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 65072 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 65072 0x401519: main (example3.cpp:26)
      n1: 64512 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 64512 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 64512 0x401519: main (example3.cpp:26)
      n1: 63896 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 63896 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 63896 0x401519: main (example3.cpp:26)
      n0: 4480 in 4 places, all below massif's threshold (1.00%)
    n0: 504 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 836720 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 836720 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 836720 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 836720 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 836720 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 836720 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 836720 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 277080 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 277080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 277080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 277080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 277080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 277080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 277080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 277080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 277080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 277080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 277080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 277080 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 277080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 277080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 277080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 277080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 277080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 277080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 277080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 277080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 277080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 277080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 141280 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 141280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 141280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 141280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 141280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 141280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 141280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 141280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 141280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 141280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 141280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 141280 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 141280 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 141280 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 141280 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 141280 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 141280 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 141280 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 141280 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 141280 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 141280 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 141280 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 502032 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 502032 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 502032 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 502032 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 502032 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 502032 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 502032 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 502032 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 502032 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 166248 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 166248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 166248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 166248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 166248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 166248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 166248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 166248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 166248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 166248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 166248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 166248 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 166248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 166248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 166248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 166248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 166248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 166248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 166248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 166248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 166248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 166248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 84768 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 84768 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 84768 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 84768 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 84768 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 84768 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 84768 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 84768 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 84768 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 84768 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 84768 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 84768 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 84768 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 84768 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 84768 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 84768 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 84768 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 84768 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 84768 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 84768 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 84768 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 84768 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 327000 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 119440 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 119440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 119440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 119440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 119440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 119440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 119440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 119440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 119440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 119440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 119440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 71080 in 2 places, all below massif's threshold (1.00%)
  n1: 70840 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 70840 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 70840 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 70840 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 70840 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 70840 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 70840 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 70840 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 70840 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 70840 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 70840 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 65640 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 65640 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 65640 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 65640 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 65640 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 65640 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 65640 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 65640 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 65640 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 65640 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 65640 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 301792 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 301792 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 121384 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 121384 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 121384 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 121384 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 121384 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 121384 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 121384 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 121384 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 121384 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 121384 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 121384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 121384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 121384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 121384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 121384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 121384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 121384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 121384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 121384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 121384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 196200 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 196200 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 196200 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 196200 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 196200 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 196200 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 196200 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 195816 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 124344 in 4 places, all below massif's threshold (1.00%)
         n1: 71472 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 71472 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 71472 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 71472 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 71472 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 71472 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 71472 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 71472 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 71472 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 71472 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 71472 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 384 in 2 places, all below massif's threshold (1.00%)
 n1: 92400 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 92400 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 92400 0x401519: main (example3.cpp:26)
 n0: 75432 in 8 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
#-----------
snapshot=32
#-----------
time=23352638979
mem_heap_B=4136320
mem_heap_extra_B=1732280
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=24487306912
mem_heap_B=4041408
mem_heap_extra_B=1691288
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=25338306506
mem_heap_B=3968704
mem_heap_extra_B=1659208
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=26472975239
mem_heap_B=3872648
mem_heap_extra_B=1614024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=27607641599
mem_heap_B=3776560
mem_heap_extra_B=1570632
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=28458641320
mem_heap_B=3701704
mem_heap_extra_B=1534424
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=29309641661
mem_heap_B=3628120
mem_heap_extra_B=1500968
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=29876973476
mem_heap_B=3572816
mem_heap_extra_B=1475144
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=30727971787
mem_heap_B=3492976
mem_heap_extra_B=1438856
mem_stacks_B=0
heap_tree=detailed
n10: 3492976 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1445920 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 1445920 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 1445080 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 759416 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n5: 759416 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 603680 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 278712 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 278712 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 278712 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 278712 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 278712 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 278712 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 278712 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 278712 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 278712 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 278712 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 278712 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 120904 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 120904 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 120904 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 120904 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 120904 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 120904 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 120904 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 120904 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 120904 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 120904 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 120904 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 91560 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 91560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 91560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 91560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 91560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 91560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 91560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 91560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 91560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 91560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 91560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 68600 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 68600 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 68600 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 68600 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 68600 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 68600 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 68600 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 68600 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 68600 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 68600 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 68600 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 43904 in 1 place, below massif's threshold (1.00%)
      n1: 51240 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 51240 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51240 0x401519: main (example3.cpp:26)
      n1: 50848 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 50848 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 50848 0x401519: main (example3.cpp:26)
      n1: 50680 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 50680 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 50680 0x401519: main (example3.cpp:26)
      n0: 2968 in 3 places, all below massif's threshold (1.00%)
    n1: 685384 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n5: 685384 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 527296 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 141456 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 141456 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 141456 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 141456 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 141456 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 141456 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 141456 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 141456 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 141456 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 141456 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 141456 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 139104 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 139104 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 139104 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 139104 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 139104 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 139104 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 139104 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 139104 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 139104 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 139104 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 139104 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 116648 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 116648 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 116648 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 116648 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 116648 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 116648 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 116648 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 116648 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 116648 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 116648 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 116648 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 91504 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 91504 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 91504 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 91504 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 91504 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 91504 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 91504 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 91504 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 91504 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 91504 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 91504 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 38584 in 1 place, below massif's threshold (1.00%)
      n1: 51912 0x403770: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 51912 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51912 0x401519: main (example3.cpp:26)
      n1: 51744 0x403756: pfv3d::add_points(int, double*) (pfv3d.h:281)
       n1: 51744 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51744 0x401519: main (example3.cpp:26)
      n1: 51352 0x403678: pfv3d::add_points(int, double*) (pfv3d.h:268)
       n1: 51352 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
        n0: 51352 0x401519: main (example3.cpp:26)
      n0: 3080 in 4 places, all below massif's threshold (1.00%)
    n0: 280 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 683200 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 683200 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 683200 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 683200 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 683200 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 683200 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 683200 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 219800 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 219800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 219800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 219800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 219800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 219800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 219800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 219800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 219800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 219800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 219800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 219800 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 219800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 219800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 219800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 219800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 219800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 219800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 219800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 219800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 219800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 219800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 121800 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 121800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 121800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 121800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 121800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 121800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 121800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 121800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 121800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 121800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 121800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 121800 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 121800 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 121800 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 121800 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 121800 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 121800 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 121800 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 121800 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 121800 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 121800 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 121800 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 409920 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 409920 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 409920 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 409920 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 409920 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 409920 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 409920 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 409920 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 409920 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 131880 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 131880 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 131880 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 131880 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 131880 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 131880 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 131880 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 131880 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 131880 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 131880 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 131880 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 131880 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 131880 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 131880 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 131880 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 131880 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 131880 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 131880 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 131880 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 131880 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 131880 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 131880 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 73080 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 73080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 73080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 73080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 73080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 73080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 73080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 73080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 73080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 73080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 73080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 73080 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 73080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 73080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 73080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 73080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 73080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 73080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 73080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 73080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 73080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 73080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 301792 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 301792 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 121384 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 121384 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 121384 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 121384 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 121384 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 121384 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 121384 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 121384 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 121384 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 121384 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 121384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 121384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 121384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 121384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 121384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 121384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 121384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 121384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 121384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 121384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n4: 269280 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 99480 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 99480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 99480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 99480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 99480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 99480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 99480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 99480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 99480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 99480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 99480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 57760 in 2 places, all below massif's threshold (1.00%)
  n1: 56560 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 56560 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 56560 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 56560 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 56560 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 56560 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 56560 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 56560 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 56560 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 56560 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 56560 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 55480 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 55480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 55480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 55480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 55480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 55480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 55480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 55480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 55480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 55480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 55480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 161568 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 161568 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 161568 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 161568 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 161568 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 161568 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 161568 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 161232 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 101712 in 4 places, all below massif's threshold (1.00%)
         n1: 59520 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 59520 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 59520 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 59520 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 59520 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 59520 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 59520 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 59520 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 59520 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 59520 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 59520 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 336 in 2 places, all below massif's threshold (1.00%)
 n1: 73280 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 73280 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 73280 0x401519: main (example3.cpp:26)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n0: 19728 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=41
#-----------
time=31295305457
mem_heap_B=3433040
mem_heap_extra_B=1411160
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=32146303834
mem_heap_B=3340120
mem_heap_extra_B=1366872
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=33280969483
mem_heap_B=3221208
mem_heap_extra_B=1312584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=33848301605
mem_heap_B=3149128
mem_heap_extra_B=1279208
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=34699299616
mem_heap_B=3058288
mem_heap_extra_B=1236760
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=35266633185
mem_heap_B=2990248
mem_heap_extra_B=1203880
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=36117632851
mem_heap_B=2880632
mem_heap_extra_B=1153016
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=36968634076
mem_heap_B=2770656
mem_heap_extra_B=1101944
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=37535965604
mem_heap_B=2697344
mem_heap_extra_B=1067416
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=37987573691
mem_heap_B=2631144
mem_heap_extra_B=1036888
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=38439182276
mem_heap_B=2556424
mem_heap_extra_B=1002936
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=38890792494
mem_heap_B=2485856
mem_heap_extra_B=969480
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=53
#-----------
time=39342403539
mem_heap_B=2414016
mem_heap_extra_B=935224
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=39794012070
mem_heap_B=2336288
mem_heap_extra_B=900504
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=40245620346
mem_heap_B=2258752
mem_heap_extra_B=864680
mem_stacks_B=0
heap_tree=detailed
n10: 2258752 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 859488 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 859488 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 858648 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 441728 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 441728 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 354032 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 161336 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 161336 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 161336 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 161336 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 161336 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 161336 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 161336 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 161336 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 161336 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 161336 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 161336 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 75376 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 75376 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 75376 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 75376 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 75376 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 75376 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 75376 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 75376 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 75376 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 75376 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 75376 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 54712 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 54712 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 54712 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 54712 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 54712 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 54712 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 54712 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 54712 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 54712 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 54712 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 54712 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 43568 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 43568 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 43568 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 43568 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 43568 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 43568 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 43568 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 43568 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 43568 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 43568 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 43568 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 19040 in 1 place, below massif's threshold (1.00%)
      n0: 87696 in 6 places, all below massif's threshold (1.00%)
    n1: 416696 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 416696 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 324856 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 93016 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 93016 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 93016 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 93016 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 93016 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 93016 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 93016 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 93016 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 93016 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 93016 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 93016 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 86072 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 86072 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 86072 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 86072 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 86072 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 86072 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 86072 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 86072 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 86072 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 86072 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 86072 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 68768 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 68768 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 68768 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 68768 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 68768 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 68768 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 68768 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 68768 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 68768 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 68768 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 68768 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 60592 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 60592 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 60592 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 60592 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 60592 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 60592 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 60592 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 60592 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 60592 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 60592 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 60592 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 16408 in 1 place, below massif's threshold (1.00%)
      n0: 91840 in 7 places, all below massif's threshold (1.00%)
    n0: 224 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 405120 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 405120 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 405120 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 405120 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 405120 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 405120 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 405120 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 123400 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 123400 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 123400 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 123400 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 123400 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 123400 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 123400 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 123400 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 123400 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 123400 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 123400 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 123400 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 123400 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 123400 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 123400 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 123400 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 123400 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 123400 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 123400 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 123400 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 123400 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 123400 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 79160 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 79160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 79160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 79160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 79160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 79160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 79160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 79160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 79160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 79160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 79160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 79160 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 79160 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 79160 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 79160 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 79160 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 79160 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 79160 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 79160 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 79160 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 79160 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 79160 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 301792 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 301792 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 121384 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 121384 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 121384 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 121384 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 121384 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 121384 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 121384 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 121384 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 121384 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 121384 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 121384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 121384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 121384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 121384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 121384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 121384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 121384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 121384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 121384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 121384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 243072 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 243072 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 243072 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 243072 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 243072 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 243072 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 243072 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 243072 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 243072 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 74040 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 74040 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 74040 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 74040 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 74040 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 74040 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 74040 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 74040 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 74040 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 74040 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 74040 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 74040 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 74040 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 74040 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 74040 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 74040 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 74040 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 74040 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 74040 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 74040 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 74040 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 74040 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 47496 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 47496 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 47496 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 47496 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 47496 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 47496 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 47496 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 47496 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 47496 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 47496 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 47496 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 47496 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 47496 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 47496 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 47496 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 47496 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 47496 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 47496 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 47496 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 47496 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 47496 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 47496 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n4: 162640 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n1: 61080 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 61080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 61080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 61080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 61080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 61080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 61080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 61080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 61080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 61080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 61080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 34640 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
   n1: 34640 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 34640 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 34640 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 34640 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 34640 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 34640 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 34640 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 34640 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 34640 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 34640 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n1: 33680 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
   n1: 33680 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 33680 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 33680 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 33680 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 33680 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 33680 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 33680 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 33680 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 33680 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 33680 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
  n0: 33240 in 2 places, all below massif's threshold (1.00%)
 n1: 97584 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 97584 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 97584 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 97584 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 97584 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 97584 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 97584 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n2: 96864 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 60576 in 4 places, all below massif's threshold (1.00%)
         n1: 36288 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
          n1: 36288 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
           n1: 36288 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
            n1: 36288 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
             n1: 36288 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
              n1: 36288 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
               n1: 36288 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                n1: 36288 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                 n1: 36288 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                  n1: 36288 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                   n0: 36288 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n0: 720 in 2 places, all below massif's threshold (1.00%)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 41160 0x403633: pfv3d::add_points(int, double*) (pfv3d.h:268)
  n1: 41160 0x4035F9: pfv3d::add_point(double*) (pfv3d.h:262)
   n0: 41160 0x401519: main (example3.cpp:26)
 n0: 19608 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=56
#-----------
time=40697230305
mem_heap_B=2177776
mem_heap_extra_B=826184
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=41148840266
mem_heap_B=2093528
mem_heap_extra_B=787128
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=41600449801
mem_heap_B=1998456
mem_heap_extra_B=744280
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=42052062048
mem_heap_B=1909736
mem_heap_extra_B=701704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=42503670946
mem_heap_B=1808744
mem_heap_extra_B=656840
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=42955279394
mem_heap_B=1691800
mem_heap_extra_B=602600
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=43406890086
mem_heap_B=1574328
mem_heap_extra_B=547240
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=63
#-----------
time=43858499747
mem_heap_B=1435120
mem_heap_extra_B=483816
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=44310108184
mem_heap_B=1261800
mem_heap_extra_B=403288
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=44761718849
mem_heap_B=1066680
mem_heap_extra_B=314616
mem_stacks_B=0
heap_tree=detailed
n10: 1066680 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 301792 0x40E606: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 301792 0x40E4F8: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:416)
   n1: 180408 0x40E55E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 180408 0x40E4BF: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 180408 0x40DFC1: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2002)
      n1: 180408 0x40DB85: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 180408 0x40CFEB: std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*, unsigned long, std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>*) (hashtable.h:1625)
        n1: 180408 0x40BD36: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1714)
         n1: 180408 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
          n1: 180408 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
           n1: 180408 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
            n2: 180408 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
             n1: 180408 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
              n1: 180408 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
               n1: 180408 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
                n1: 180408 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                 n1: 180408 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                  n1: 180408 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                   n1: 180408 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                    n1: 180408 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                     n1: 180408 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                      n1: 180408 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                       n0: 180408 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
             n0: 0 in 2 places, all below massif's threshold (1.00%)
   n1: 121384 0x40E296: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1994)
    n1: 121384 0x40DE0B: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:346)
     n1: 121384 0x40D5C7: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:1961)
      n1: 121384 0x40C7A1: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:1940)
       n1: 121384 0x40B687: std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Point*, true>*) (hashtable.h:1587)
        n1: 121384 0x40A06B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1691)
         n1: 121384 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
          n1: 121384 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
           n2: 121384 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
            n1: 121384 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
             n1: 121384 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
              n1: 121384 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
               n1: 121384 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
                n1: 121384 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
                 n1: 121384 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                  n1: 121384 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                   n1: 121384 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                    n1: 121384 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                     n1: 121384 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                      n0: 121384 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
            n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 296912 0x40C0BE: __gnu_cxx::new_allocator<tree_node<(tree_type)8, Point*, 1ul> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n2: 296912 0x40AB31: std::allocator_traits<std::allocator<tree_node<(tree_type)8, Point*, 1ul> > >::allocate(std::allocator<tree_node<(tree_type)8, Point*, 1ul> >&, unsigned long) (alloc_traits.h:416)
   n3: 296072 0x409DAF: tree_node<(tree_type)8, Point*, 1ul>* tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_new_node<Point* const&>(tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, tree_node<(tree_type)8, Point*, 1ul>*, Point* const&) (tree_base.h:927)
    n1: 150584 0x4086D3: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:975)
     n2: 150584 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 116368 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 35392 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 35392 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 35392 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 35392 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 35392 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 35392 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 35392 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 35392 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 35392 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 35392 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 35392 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 30184 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 30184 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 30184 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 30184 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 30184 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 30184 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 30184 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 30184 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 30184 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 30184 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 30184 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 25256 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 25256 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 25256 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 25256 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 25256 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 25256 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 25256 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 25256 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 25256 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 25256 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 25256 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 23128 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 23128 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 23128 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 23128 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 23128 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 23128 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 23128 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 23128 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 23128 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 23128 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 23128 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 2408 in 1 place, below massif's threshold (1.00%)
      n0: 34216 in 7 places, all below massif's threshold (1.00%)
    n1: 145208 0x408732: tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::_insert(bool&, Point* const&) (tree_base.h:979)
     n2: 145208 0x40770F: std::pair<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>, bool> tree_base<tree_node<(tree_type)8, Point*, 1ul>, Point*, 1ul, pfv3d::point_compare, std::allocator<Point*> >::insert<tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul> >(Point* const&) (tree_base.h:208)
      n5: 116480 0x406BF7: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:671)
       n1: 55328 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
        n1: 55328 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 55328 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 55328 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 55328 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 55328 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 55328 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 55328 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 55328 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 55328 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 55328 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 23576 0x405C15: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:570)
        n1: 23576 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 23576 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 23576 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 23576 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 23576 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 23576 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 23576 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 23576 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 23576 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 23576 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 18536 0x4066FB: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:634)
        n1: 18536 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 18536 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 18536 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 18536 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 18536 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 18536 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 18536 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 18536 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 18536 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 18536 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n1: 17416 0x4060EA: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:600)
        n1: 17416 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
         n1: 17416 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
          n1: 17416 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
           n1: 17416 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
            n1: 17416 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
             n1: 17416 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
              n1: 17416 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
               n1: 17416 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                n1: 17416 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                 n0: 17416 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
       n0: 1624 in 1 place, below massif's threshold (1.00%)
      n0: 28728 in 6 places, all below massif's threshold (1.00%)
    n0: 280 in 1 place, below massif's threshold (1.00%)
   n0: 840 in 1 place, below massif's threshold (1.00%)
 n1: 135080 0x40D9BC: __gnu_cxx::new_allocator<std::_List_node<Triangle> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 135080 0x40CE3C: std::allocator_traits<std::allocator<std::_List_node<Triangle> > >::allocate(std::allocator<std::_List_node<Triangle> >&, unsigned long) (alloc_traits.h:416)
   n1: 135080 0x40BBBD: std::__cxx11::_List_base<Triangle, std::allocator<Triangle> >::_M_get_node() (stl_list.h:383)
    n1: 135080 0x40A589: std::_List_node<Triangle>* std::__cxx11::list<Triangle, std::allocator<Triangle> >::_M_create_node<Triangle>(Triangle&&) (stl_list.h:568)
     n1: 135080 0x408E62: std::_List_iterator<Triangle> std::__cxx11::list<Triangle, std::allocator<Triangle> >::emplace<Triangle>(std::_List_const_iterator<Triangle>, Triangle&&) (list.tcc:91)
      n1: 135080 0x407C4C: std::__cxx11::list<Triangle, std::allocator<Triangle> >::insert(std::_List_const_iterator<Triangle>, Triangle&&) (stl_list.h:1186)
       n4: 135080 0x406D4B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
        n1: 37080 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
         n1: 37080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 37080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 37080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 37080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 37080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 37080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 37080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 37080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 37080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 37080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 37080 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
         n1: 37080 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 37080 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 37080 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 37080 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 37080 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 37080 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 37080 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 37080 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 37080 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 37080 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 30480 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
         n1: 30480 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 30480 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 30480 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 30480 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 30480 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 30480 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 30480 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 30480 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 30480 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 30480 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
        n1: 30440 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
         n1: 30440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
          n1: 30440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
           n1: 30440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
            n1: 30440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
             n1: 30440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
              n1: 30440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
               n1: 30440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                n1: 30440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                 n1: 30440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                  n0: 30440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 81024 0x40E41F: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 81024 0x40DF62: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> >&, unsigned long) (alloc_traits.h:416)
   n1: 81024 0x40DA66: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::_M_allocate_node<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:1947)
    n1: 81024 0x40CF63: std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > >::operator()<std::pair<Point* const, std::_List_iterator<Triangle> > const&>(std::pair<Point* const, std::_List_iterator<Triangle> > const&) const (hashtable_policy.h:180)
     n1: 81024 0x40BD1A: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::__detail::_Node_const_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false>, std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:1712)
      n1: 81024 0x40A6DF: std::__detail::_Node_iterator<std::pair<Point* const, std::_List_iterator<Triangle> >, false, false> std::_Hashtable<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert<std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > >(std::pair<Point* const, std::_List_iterator<Triangle> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<Point* const, std::_List_iterator<Triangle> >, false> > > const&, std::integral_constant<bool, false>) (hashtable.h:695)
       n1: 81024 0x408EFE: std::__detail::_Insert_base<Point*, std::pair<Point* const, std::_List_iterator<Triangle> >, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > >, std::__detail::_Select1st, std::equal_to<Point*>, std::hash<Point*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (hashtable_policy.h:713)
        n1: 81024 0x407C71: std::unordered_multimap<Point*, std::_List_iterator<Triangle>, std::hash<Point*>, std::equal_to<Point*>, std::allocator<std::pair<Point* const, std::_List_iterator<Triangle> > > >::insert(std::pair<Point* const, std::_List_iterator<Triangle> > const&) (unordered_map.h:1405)
         n4: 81024 0x406D9B: pfv3d::add_triangle(int, Point*, Point*, Point*, Point*) (pfv3d.h:682)
          n1: 22248 0x406A27: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:650)
           n1: 22248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 22248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 22248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 22248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 22248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 22248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 22248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 22248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 22248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 22248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 22248 0x406A60: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:651)
           n1: 22248 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 22248 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 22248 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 22248 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 22248 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 22248 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 22248 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 22248 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 22248 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 22248 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 18264 0x406132: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:603)
           n1: 18264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 18264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 18264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 18264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 18264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 18264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 18264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 18264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 18264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 18264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
          n1: 18264 0x40616B: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:604)
           n1: 18264 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
            n1: 18264 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
             n1: 18264 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
              n1: 18264 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
               n1: 18264 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
                n1: 18264 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
                 n1: 18264 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
                  n1: 18264 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
                   n1: 18264 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
                    n0: 18264 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n1: 72704 0x5EADA1E: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:123)
  n1: 72704 0x400F4F8: call_init.part.0 (in /usr/lib/ld-2.24.so)
   n1: 72704 0x400F609: _dl_init (in /usr/lib/ld-2.24.so)
    n0: 72704 0x4000DA8: ??? (in /usr/lib/ld-2.24.so)
 n2: 57160 0x406B24: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:664)
  n0: 34720 in 4 places, all below massif's threshold (1.00%)
  n1: 22440 0x405F14: pfv3d::facet(int, tree_traversor<tree_node<(tree_type)8, Point*, 1ul>, Point*, true, 1ul>&, Point*&, int&, int&, bool&) (pfv3d.h:594)
   n1: 22440 0x4052EC: pfv3d::sweep(int) (pfv3d.h:498)
    n1: 22440 0x40F31D: void std::__invoke_impl<void, void (pfv3d::* const&)(int), pfv3d*, int>(std::__invoke_memfun_deref, void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:235)
     n1: 22440 0x40F291: std::result_of<void (pfv3d::* const&(pfv3d*&&, int&&))(int)>::type std::__invoke<void (pfv3d::* const&)(int), pfv3d*, int>(void (pfv3d::* const&)(int), pfv3d*&&, int&&) (functional:260)
      n1: 22440 0x40F225: decltype (__invoke((*this)._M_pmf, (forward<pfv3d*>)({parm#1}), (forward<int>)({parm#1}))) std::_Mem_fn_base<void (pfv3d::*)(int), true>::operator()<pfv3d*, int>(pfv3d*&&, int&&) const (functional:613)
       n1: 22440 0x40F067: void std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (functional:1400)
        n1: 22440 0x40E89B: std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)>::operator()() (functional:1389)
         n1: 22440 0x40E68C: std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (pfv3d::*)(int)> (pfv3d*, int)> >::_M_run() (thread:196)
          n1: 22440 0x5EDD35D: execute_native_thread_routine (thread.cc:83)
           n1: 22440 0x4E33452: start_thread (in /usr/lib/libpthread-2.24.so)
            n0: 22440 0x67AD7DD: clone (in /usr/lib/libc-2.24.so)
 n0: 55584 0x401440: main (example3.cpp:17)
 n1: 34296 0x40DD79: __gnu_cxx::new_allocator<std::__detail::_Hash_node<Point*, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)
  n1: 34296 0x40D55B: std::allocator_traits<std::allocator<std::__detail::_Hash_node<Point*, true> > >::allocate(std::allocator<std::__detail::_Hash_node<Point*, true> >&, unsigned long) (alloc_traits.h:416)
   n1: 34296 0x40C682: std::__detail::_Hash_node<Point*, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<Point*, true> > >::_M_allocate_node<Point* const&>(Point* const&) (hashtable_policy.h:1947)
    n1: 34296 0x40B5FF: std::__detail::_Hash_node<Point*, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > >::operator()<Point* const&>(Point* const&) const (hashtable_policy.h:180)
     n1: 34296 0x40A04B: std::pair<std::__detail::_Node_iterator<Point*, true, true>, bool> std::_Hashtable<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > >(Point* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Point*, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:1690)
      n1: 34296 0x4088C0: std::__detail::_Insert_base<Point*, Point*, std::allocator<Point*>, std::__detail::_Identity, pfv3d::point_equal, pfv3d::point_hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(Point* const&) (hashtable_policy.h:713)
       n2: 34296 0x407937: std::unordered_set<Point*, pfv3d::point_hash, pfv3d::point_equal, std::allocator<Point*> >::insert(Point* const&) (unordered_set.h:413)
        n1: 33264 0x406B6B: pfv3d::add_vertex(int, double, double, double) (pfv3d.h:666)
         n0: 33264 in 5 places, all below massif's threshold (1.00%)
        n0: 1032 in 2 places, all below massif's threshold (1.00%)
 n0: 18528 0x40140A: main (example3.cpp:14)
 n0: 13600 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=66
#-----------
time=45213327792
mem_heap_B=774976
mem_heap_extra_B=181768
mem_stacks_B=0
heap_tree=empty
